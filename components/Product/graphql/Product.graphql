#import "~/graphql/_price.graphql"
#import "~/graphql/_Gallery.graphql"

query ProductQuery($urlKey: String!) {
    store: storeConfig {
        id
        categoryUrlSuffix: category_url_suffix
    }

    product: products(filter: { url_key: { eq: $urlKey } }, pageSize: 1) {
        items {
            id

            metaDescription: meta_description
            metaKeywords: meta_keyword
            metaTitle: meta_title
            sku
            stock: stock_status
            type: __typename
            title: name

            categories {
                id
                text: name
                href: url_path
                mode: display_mode
            }

            ...price

            gallery: media_gallery {
                ...Gallery
            }

            shortDescription: short_description {
                html
            }

            description: description {
                html
            }

            ... on GroupedProduct {
                group: items {
                    product {
                        id
                        name
                        sku
                        stock: stock_status
                        ...price
                    }
                }
            }

            ... on ConfigurableProduct {
                options: configurable_options {
                    id
                    label
                    position
                    # required
                    code: attribute_code
                    items: values {
                        id: value_index
                        label
                        value: value_index
                        swatch: swatch_data {
                            __typename
                            value

                            ... on TextSwatchData {
                                text: value
                            }

                            ... on ColorSwatchData {
                                color: value
                            }

                            ... on ImageSwatchData {
                                image: thumbnail
                            }
                        }
                    }
                }
                variants {
                    attributes {
                        id: value_index
                        code
                        value: value_index
                    }
                    product {
                        id
                        variantSku: sku
                        stock: stock_status

                        ...price

                        gallery: media_gallery {
                            ...Gallery
                        }
                    }
                }
            }

            # Related Products
            related: related_products {
                # No Fragment Support :(
                id
                title: name
                urlKey: url_key

                image {
                    alt: label
                    src: url
                }

                ...price

                ... on ConfigurableProduct {
                    options: configurable_options {
                        id
                        items: values {
                            id: value_index
                            label
                            swatch: swatch_data {
                                value
                                __typename
                            }
                        }
                    }
                }
            }

            upsell: upsell_products {
                # No Fragment Support :(
                id
                title: name
                urlKey: url_key

                image {
                    alt: label
                    src: url
                }

                ...price

                ... on ConfigurableProduct {
                    options: configurable_options {
                        id
                        items: values {
                            id: value_index
                            label
                            swatch: swatch_data {
                                value
                                __typename
                            }
                        }
                    }
                }
            }
        }
    }
}
